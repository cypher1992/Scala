[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set()
[debug] 	added: Set(C:\Users\Zero\IdeaProjects\Learning\Scala\src\test\scala\com\AlgoAndDataStructureTest\ArrayStructureTest\QueueTest.scala)
[debug] 	modified: Set()
[debug] Invalidated products: Set()
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated classes: Set()
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set()
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated classes: Set()
[debug] All initially invalidated sources:Set(C:\Users\Zero\IdeaProjects\Learning\Scala\src\test\scala\com\AlgoAndDataStructureTest\ArrayStructureTest\QueueTest.scala)
[info] Compiling 1 Scala source to C:\Users\Zero\IdeaProjects\Learning\Scala\target\scala-2.13\test-classes ...
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.2.5:compile for Scala 2.13.0
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.2.5:compile for Scala 2.13.0
[debug] [zinc] Running cached compiler f7194bf for Scala compiler version 2.13.0
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-bootclasspath
[debug] 	C:\Program Files\Java\jdk1.8.0_211\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_211\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_211\jre\classes;C:\Users\Zero\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.13.0.jar
[debug] 	-classpath
[debug] 	C:\Users\Zero\IdeaProjects\Learning\Scala\target\scala-2.13\test-classes;C:\Users\Zero\IdeaProjects\Learning\Scala\target\scala-2.13\classes;C:\Users\Zero\.ivy2\cache\com.typesafe.scala-logging\scala-logging_2.13\bundles\scala-logging_2.13-3.9.2.jar;C:\Users\Zero\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.13.0.jar;C:\Users\Zero\.ivy2\cache\org.slf4j\slf4j-api\jars\slf4j-api-1.7.26.jar;C:\Users\Zero\.ivy2\cache\ch.qos.logback\logback-classic\jars\logback-classic-1.1.7.jar;C:\Users\Zero\.ivy2\cache\ch.qos.logback\logback-core\jars\logback-core-1.1.7.jar;C:\Users\Zero\.ivy2\cache\joda-time\joda-time\jars\joda-time-2.10.4.jar;C:\Users\Zero\.ivy2\cache\org.joda\joda-convert\jars\joda-convert-2.2.1.jar;C:\Users\Zero\.ivy2\cache\io.github.mainstringargs\alpha-vantage-scraper\jars\alpha-vantage-scraper-1.1.jar;C:\Users\Zero\.ivy2\cache\io.github.mainstringargs\stock-data-spi\jars\stock-data-spi-1.1.jar;C:\Users\Zero\.ivy2\cache\org.slf4j\slf4j-log4j12\jars\slf4j-log4j12-1.7.25.jar;C:\Users\Zero\.ivy2\cache\log4j\log4j\bundles\log4j-1.2.17.jar;C:\Users\Zero\.ivy2\cache\com.google.code.gson\gson\jars\gson-2.8.2.jar;C:\Users\Zero\.ivy2\cache\com.google.code.findbugs\jsr305\jars\jsr305-3.0.2.jar;C:\Users\Zero\.ivy2\cache\org.scalatest\scalatest_2.13\bundles\scalatest_2.13-3.1.0.jar;C:\Users\Zero\.ivy2\cache\org.scalatest\scalatest-compatible\bundles\scalatest-compatible-3.1.0.jar;C:\Users\Zero\.ivy2\cache\org.scalactic\scalactic_2.13\bundles\scalactic_2.13-3.1.0.jar;C:\Users\Zero\.ivy2\cache\org.scala-lang.modules\scala-xml_2.13\bundles\scala-xml_2.13-1.2.0.jar
[debug] Scala compilation took 1.82276941 s
[info] Done compiling.
[debug] Invalidating (transitively) by inheritance from com.AlgoAndDataStructureTest.ArrayStructureTest.QueueTest...
[debug] Initial set of included nodes: Set(com.AlgoAndDataStructureTest.ArrayStructureTest.QueueTest)
[debug] Invalidated by transitive inheritance dependency: Set(com.AlgoAndDataStructureTest.ArrayStructureTest.QueueTest)
[debug] Change NamesChange(com.AlgoAndDataStructureTest.ArrayStructureTest.QueueTest,ModifiedNames(changes = UsedName(RegexWrapper,[Default]), UsedName(ResultOfHaveWordForCollectedExtent,[Default]), UsedName(synchronized,[Default]), UsedName(ResultOfIncludeWordForCollectedString,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(between,[Default]), UsedName(execute$default$2,[Default]), UsedName(BehaviorWord,[Default]), UsedName(asInstanceOf,[Default]), UsedName(ItVerbString,[Default]), UsedName(only,[Default]), UsedName(==,[Default]), UsedName(ResultOfBeWordForCollectedArray,[Default]), UsedName(message,[Default]), UsedName(isInstanceOf,[Default]), UsedName(TheyVerbString,[Default]), UsedName(ResultOfFullyMatchWordForCollectedString,[Default]), UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName(QueueTest,[Default]), UsedName(info,[Default]), UsedName(atMost,[Default]), UsedName(matchPattern,[Default]), UsedName(atLeast,[Default]), UsedName(ResultOfStartWithWordForCollectedString,[Default]), UsedName(execute$default$4,[Default]), UsedName(inOrderElementsOf,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(RegexWord,[Default]), UsedName(<=,[Default]), UsedName(value,[Default]), UsedName(behavior,[Default]), UsedName(determined,[Default]), UsedName(createCatchReporter,[Default]), UsedName(noElementsOf,[Default]), UsedName(atLeastOneElementOf,[Default]), UsedName(TheSameInstanceAsPhrase,[Default]), UsedName($asInstanceOf,[Default]), UsedName(testDataFor,[Default]), UsedName(execute,[Default]), UsedName(an,[Default]), UsedName(>,[Default]), UsedName(ResultOfBeWordForCollectedAny,[Default]), UsedName(wait,[Default]), UsedName(ResultOfFullyMatchWordForString,[Default]), UsedName(expectedTestCount,[Default]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(not,[Default]), UsedName(NoArgTest,[Default]), UsedName(nestedSuites,[Default]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(ignore,[Default]), UsedName(AWord,[Default]), UsedName(defaultEquality,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(ResultOfCollectedAny,[Default]), UsedName(getClass,[Default]), UsedName(all,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(ne,[Default]), UsedName(Equalizer,[Default]), UsedName(allOf,[Default]), UsedName(DecidedByEquality,[Default]), UsedName(markup,[Default]), UsedName(inOrder,[Default]), UsedName(key,[Default]), UsedName(noException,[Default]), UsedName(exactly,[Default]), UsedName(startWith,[Default]), UsedName(noneOf,[Default]), UsedName(atMostOneOf,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(ResultOfContainWordForCollectedAny,[Default]), UsedName($isInstanceOf,[Default]), UsedName(atMostOneElementOf,[Default]), UsedName(TheAfterWord,[Default]), UsedName(execute$default$3,[Default]), UsedName(ItVerbStringTaggedAs,[Default]), UsedName(endWith,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(===,[Default]), UsedName(ValueWord,[Default]), UsedName(equals,[Default]), UsedName(equal,[Default]), UsedName(withClue,[Default]), UsedName(runTest,[Default]), UsedName(be,[Default]), UsedName(assume,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(theSameElementsAs,[Default]), UsedName(StringMustWrapper,[Default]), UsedName(typeCheck,[Default]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(cancel,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(length,[Default]), UsedName(eq,[Default]), UsedName(ResultOfStartWithWordForString,[Default]), UsedName(include,[Default]), UsedName(>=,[Default]), UsedName(!==,[Default]), UsedName(readable,[Default]), UsedName(pending,[Default]), UsedName(TheyWord,[Default]), UsedName(intercept,[Default]), UsedName(doCollected,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(oneElementOf,[Default]), UsedName(inOrderOnly,[Default]), UsedName(behave,[Default]), UsedName(IgnoreVerbStringTaggedAs,[Default]), UsedName(execute$default$7,[Default]), UsedName(InAndIgnoreMethods,[Default]), UsedName(writable,[Default]), UsedName(a,[Default]), UsedName(HavePropertyMatcherGenerator,[Default]), UsedName(ResultOfEndWithWordForString,[Default]), UsedName(fail,[Default]), UsedName(DeterminedWord,[Default]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(every,[Default]), UsedName(ResultOfEndWithWordForCollectedString,[Default]), UsedName(notify,[Default]), UsedName(InAndIgnoreMethodsAfterTaggedAs,[Default]), UsedName(defined,[Default]), UsedName(Collected,[Default]), UsedName(compile,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(AnyMustWrapper,[Default]), UsedName(the,[Default]), UsedName(decided,[Default]), UsedName($init$,[Default]), UsedName(suiteName,[Default]), UsedName(runNestedSuites,[Default]), UsedName(execute$default$5,[Default]), UsedName(!=,[Default]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(alert,[Default]), UsedName(size,[Default]), UsedName(allElementsOf,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(TheyVerbStringTaggedAs,[Default]), UsedName(withFixture,[Default]), UsedName(note,[Default]), UsedName(convertToStringMustWrapper,[Implicit]), UsedName(fullyMatch,[Default]), UsedName(ResultOfIncludeWordForString,[Default]), UsedName(assertCompiles,[Default]), UsedName(succeed,[Default]), UsedName(it,[Default]), UsedName(assertThrows,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(they,[Default]), UsedName(PlusOrMinusWrapper,[Default]), UsedName(KeyWord,[Default]), UsedName(theSameInstanceAs,[Default]), UsedName(clone,[Default]), UsedName(convertToAnyMustWrapper,[Implicit]), UsedName(definedAt,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(suiteId,[Default]), UsedName(run,[Default]), UsedName(ItWord,[Default]), UsedName(testNames,[Default]), UsedName(AnWord,[Default]), UsedName(ResultOfNotWordForCollectedAny,[Default]), UsedName(exist,[Default]), UsedName(have,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(ResultOfBeWordForAny,[Default]), UsedName(styleName,[Default]), UsedName(assert,[Default]), UsedName(assertTypeError,[Default]), UsedName(sorted,[Default]), UsedName(theSameElementsInOrderAs,[Default]), UsedName(execute$default$1,[Default]), UsedName(toString,[Default]), UsedName(ResultOfHaveWordForExtent,[Default]), UsedName(oneOf,[Default]), UsedName(execute$default$6,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(assertResult,[Default]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(DecidedWord,[Default]), UsedName(empty,[Default]), UsedName(IgnoreVerbString,[Default]), UsedName(runTests,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(registerTest,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(no,[Default]), UsedName(regex,[Default]), UsedName(IgnoreWord,[Default]), UsedName(<,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(atLeastOneOf,[Default]), UsedName(contain,[Default]), UsedName(of,[Default]), UsedName(DeterminedByEquivalence,[Default]), UsedName(com;AlgoAndDataStructureTest;ArrayStructureTest;QueueTest;init;,[Default]), UsedName(after,[Default]), UsedName(rerunner,[Default]), UsedName(tags,[Default]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(thrownBy,[Default]))) invalidates 1 classes due to The com.AlgoAndDataStructureTest.ArrayStructureTest.QueueTest has the following implicit definitions changed:
[debug] 	UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(convertToStringMustWrapper,[Implicit]), UsedName(convertToAnyMustWrapper,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(convertToInAndIgnoreMethods,[Implicit]).
[debug] 	> by transitive inheritance: Set(com.AlgoAndDataStructureTest.ArrayStructureTest.QueueTest)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] New invalidations:
[debug] 	Set()
[debug] Initial set of included nodes: Set()
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] 	Set()
[debug] All newly invalidated classes after taking into account (previously) recompiled classes:Set()
