<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/ListTest.scala" line="179" mnemonic="9" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="954a6d28-3e73-4efa-93e9-4a14bab4e00a" name="Default Changelist" comment="" />
    <ignored path="$PROJECT_DIR$/out/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <ignored path="$PROJECT_DIR$/project/project/target/" />
    <ignored path="$PROJECT_DIR$/project/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="DockManager">
    <window id="1">
      <content type="file-editors">
        <state>
          <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
            <file pinned="false" current-in-tab="true">
              <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/Scala99Problems">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="442">
                    <caret line="65" column="59" selection-start-line="65" selection-start-column="59" selection-end-line="65" selection-end-column="59" />
                  </state>
                </provider>
              </entry>
            </file>
          </leaf>
        </state>
      </content>
    </window>
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99ListChallenge.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="424">
              <caret line="330" lean-forward="true" selection-start-line="297" selection-start-column="1" selection-end-line="330" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Sl99.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="136">
              <caret line="8" column="55" selection-start-line="8" selection-start-column="55" selection-end-line="8" selection-end-column="55" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/ListTest.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="376">
              <caret line="647" column="40" selection-start-line="647" selection-start-column="40" selection-end-line="647" selection-end-column="40" />
              <folding>
                <element signature="e#34#75#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>exists</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/src" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/main/scala/com/local/FutureThreads/FutureFlatMap.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/ListTest.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/NestedList.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99ListChallenge.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Sl99.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/ListTest.scala" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="width" value="960" />
    <option name="height" value="1040" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="local" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="local" type="462c0819:PsiDirectoryNode" />
              <item name="Interest" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="local" type="462c0819:PsiDirectoryNode" />
              <item name="Resource" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="local" type="462c0819:PsiDirectoryNode" />
              <item name="Resource" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="review" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="review" type="462c0819:PsiDirectoryNode" />
              <item name="CollectionRev" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="ListTest" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.ListTest.Scala99ListChallenge Test: Empty List should Return Nil&#10;Scala99List Challenge Test: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99ListChallenge Test: Last Func: Empty List should Throw Exception&#10;Scala99List Challenge Test: Last Func: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99List Challenge Test: lastOfLastElement: Empty List should Expect Nil&#10;Scala99List Challenge Test: lastOfLastElement: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: penultimate: Empty List should Throws NoSuchElement Exception&#10;Scala99List Challenge Test: penultimate: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: nth position of an Empty list should returns Nil&#10;Scala99List Challenge Test: nth position of an List with Index out of bound index should returns Nil&#10;Scala99List Challenge Test: nth position of 2 should returns 2&#10;Scala99List Challenge Test: kth position of an Empty List should throws NoSuchElement Exception&#10;Scala99List Challenge Test: Position greater than list size should throws NosuchElement Exception&#10;Scala99List Challenge Test: kth list of position is 2 should return 3&#10;Scala99List Challenge Test: length() List is empty should returns 0&#10;Scala99List Challenge Test: length() List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Len() with Empty List should returns 0&#10;Scala99List Challenge: Len() with List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Rev() Pass Empty List should Empty List&#10;Scala99List Challenge: Rev() Pass List of Char should Reverse List&#10;Scala99List Challenge: Palindrome Func: Empty List should Return False&#10;Scala99List Challenge: Palindrome Func: Even Palindrome List should Return True&#10;Scala99List Challenge: Palindrome Func: Even Regular List should Return False&#10;Scala99List Challenge: Palindrome Func: Odd List should Return True&#10;Scala99List Challenge: Palindrome Func: Odd Regular List should Return False&#10;Scala99List Challenge: Flatten -&gt; Empty List of Empty List should =&gt; Empty List&#10;Scala99List Challenge: Flatten -&gt;  List of List with Empty List should =&gt; List&#10;Scala99List Challenge: dedup Func empty list of empty list should List of empty list&#10;Scala99List Challenge: dedup func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: rmDuplicates Func empty list of empty list should Empty list&#10;Scala99List Challenge: rmDuplicates func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: compress func Empty List should Return Empty List&#10;Scala99List Challenge: compress func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'a, 'd, 'e)&#10;Scala99List Challenge: pack Func with Empty List should Return empty&#10;Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))&#10;Scala99List Challenge: encode Func with Empty List should return empty list&#10;Scala99List Challenge: encode Func with Char list should return encoded list with chars and int&#10;Scala99List Challenge: encodeModified Func: Empty should Returns Empty List&#10;Scala99List Challenge: encodeModifed Func: List[Chars] should Returns List[Any]">
    <configuration name="Sl99" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="com.local.Projects.Resource.src.Sl99" />
      <module name="Scala" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.local.Projects.Resource.src.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ListTest.Scala99List Challenge: encode Func with Char list should return encoded list with chars and int" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="testName" value="Scala99List Challenge: encode Func with Char list should return encoded list with chars and int" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ListTest.Scala99List Challenge: encodeModifed Func: List[Chars] should Returns List[Any]" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="testName" value="Scala99List Challenge: encodeModifed Func: List[Chars] should Returns List[Any]" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ListTest.Scala99List Challenge: encodeModified Func: Empty should Returns Empty List" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="testName" value="Scala99List Challenge: encodeModified Func: Empty should Returns Empty List" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ListTest.Scala99ListChallenge Test: Empty List should Return Nil&#10;Scala99List Challenge Test: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99ListChallenge Test: Last Func: Empty List should Throw Exception&#10;Scala99List Challenge Test: Last Func: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99List Challenge Test: lastOfLastElement: Empty List should Expect Nil&#10;Scala99List Challenge Test: lastOfLastElement: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: penultimate: Empty List should Throws NoSuchElement Exception&#10;Scala99List Challenge Test: penultimate: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: nth position of an Empty list should returns Nil&#10;Scala99List Challenge Test: nth position of an List with Index out of bound index should returns Nil&#10;Scala99List Challenge Test: nth position of 2 should returns 2&#10;Scala99List Challenge Test: kth position of an Empty List should throws NoSuchElement Exception&#10;Scala99List Challenge Test: Position greater than list size should throws NosuchElement Exception&#10;Scala99List Challenge Test: kth list of position is 2 should return 3&#10;Scala99List Challenge Test: length() List is empty should returns 0&#10;Scala99List Challenge Test: length() List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Len() with Empty List should returns 0&#10;Scala99List Challenge: Len() with List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Rev() Pass Empty List should Empty List&#10;Scala99List Challenge: Rev() Pass List of Char should Reverse List&#10;Scala99List Challenge: Palindrome Func: Empty List should Return False&#10;Scala99List Challenge: Palindrome Func: Even Palindrome List should Return True&#10;Scala99List Challenge: Palindrome Func: Even Regular List should Return False&#10;Scala99List Challenge: Palindrome Func: Odd List should Return True&#10;Scala99List Challenge: Palindrome Func: Odd Regular List should Return False&#10;Scala99List Challenge: Flatten -&gt; Empty List of Empty List should =&gt; Empty List&#10;Scala99List Challenge: Flatten -&gt;  List of List with Empty List should =&gt; List&#10;Scala99List Challenge: dedup Func empty list of empty list should List of empty list&#10;Scala99List Challenge: dedup func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: rmDuplicates Func empty list of empty list should Empty list&#10;Scala99List Challenge: rmDuplicates func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: compress func Empty List should Return Empty List&#10;Scala99List Challenge: compress func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'a, 'd, 'e)&#10;Scala99List Challenge: pack Func with Empty List should Return empty&#10;Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))&#10;Scala99List Challenge: encode Func with Empty List should return empty list&#10;Scala99List Challenge: encode Func with Char list should return encoded list with chars and int&#10;Scala99List Challenge: encodeModified Func: Empty should Returns Empty List&#10;Scala99List Challenge: encodeModifed Func: List[Chars] should Returns List[Any]" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.ListTest" />
      <setting name="testName" value="Scala99ListChallenge Test: Empty List should Return Nil&#10;Scala99List Challenge Test: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99ListChallenge Test: Last Func: Empty List should Throw Exception&#10;Scala99List Challenge Test: Last Func: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99List Challenge Test: lastOfLastElement: Empty List should Expect Nil&#10;Scala99List Challenge Test: lastOfLastElement: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: penultimate: Empty List should Throws NoSuchElement Exception&#10;Scala99List Challenge Test: penultimate: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: nth position of an Empty list should returns Nil&#10;Scala99List Challenge Test: nth position of an List with Index out of bound index should returns Nil&#10;Scala99List Challenge Test: nth position of 2 should returns 2&#10;Scala99List Challenge Test: kth position of an Empty List should throws NoSuchElement Exception&#10;Scala99List Challenge Test: Position greater than list size should throws NosuchElement Exception&#10;Scala99List Challenge Test: kth list of position is 2 should return 3&#10;Scala99List Challenge Test: length() List is empty should returns 0&#10;Scala99List Challenge Test: length() List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Len() with Empty List should returns 0&#10;Scala99List Challenge: Len() with List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Rev() Pass Empty List should Empty List&#10;Scala99List Challenge: Rev() Pass List of Char should Reverse List&#10;Scala99List Challenge: Palindrome Func: Empty List should Return False&#10;Scala99List Challenge: Palindrome Func: Even Palindrome List should Return True&#10;Scala99List Challenge: Palindrome Func: Even Regular List should Return False&#10;Scala99List Challenge: Palindrome Func: Odd List should Return True&#10;Scala99List Challenge: Palindrome Func: Odd Regular List should Return False&#10;Scala99List Challenge: Flatten -&gt; Empty List of Empty List should =&gt; Empty List&#10;Scala99List Challenge: Flatten -&gt;  List of List with Empty List should =&gt; List&#10;Scala99List Challenge: dedup Func empty list of empty list should List of empty list&#10;Scala99List Challenge: dedup func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: rmDuplicates Func empty list of empty list should Empty list&#10;Scala99List Challenge: rmDuplicates func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: compress func Empty List should Return Empty List&#10;Scala99List Challenge: compress func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'a, 'd, 'e)&#10;Scala99List Challenge: pack Func with Empty List should Return empty&#10;Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))&#10;Scala99List Challenge: encode Func with Empty List should return empty list&#10;Scala99List Challenge: encode Func with Char list should return encoded list with chars and int&#10;Scala99List Challenge: encodeModified Func: Empty should Returns Empty List&#10;Scala99List Challenge: encodeModifed Func: List[Chars] should Returns List[Any]" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.ListTest.Scala99ListChallenge Test: Empty List should Return Nil&#10;Scala99List Challenge Test: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99ListChallenge Test: Last Func: Empty List should Throw Exception&#10;Scala99List Challenge Test: Last Func: List with 3 Values List(1,2,3) should Return Last Position: Value 3&#10;Scala99List Challenge Test: lastOfLastElement: Empty List should Expect Nil&#10;Scala99List Challenge Test: lastOfLastElement: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: penultimate: Empty List should Throws NoSuchElement Exception&#10;Scala99List Challenge Test: penultimate: List(1,2,3,4) should Expect Value 3&#10;Scala99List Challenge Test: nth position of an Empty list should returns Nil&#10;Scala99List Challenge Test: nth position of an List with Index out of bound index should returns Nil&#10;Scala99List Challenge Test: nth position of 2 should returns 2&#10;Scala99List Challenge Test: kth position of an Empty List should throws NoSuchElement Exception&#10;Scala99List Challenge Test: Position greater than list size should throws NosuchElement Exception&#10;Scala99List Challenge Test: kth list of position is 2 should return 3&#10;Scala99List Challenge Test: length() List is empty should returns 0&#10;Scala99List Challenge Test: length() List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Len() with Empty List should returns 0&#10;Scala99List Challenge: Len() with List(1,2,3,4) should returns 4&#10;Scala99List Challenge: Rev() Pass Empty List should Empty List&#10;Scala99List Challenge: Rev() Pass List of Char should Reverse List&#10;Scala99List Challenge: Palindrome Func: Empty List should Return False&#10;Scala99List Challenge: Palindrome Func: Even Palindrome List should Return True&#10;Scala99List Challenge: Palindrome Func: Even Regular List should Return False&#10;Scala99List Challenge: Palindrome Func: Odd List should Return True&#10;Scala99List Challenge: Palindrome Func: Odd Regular List should Return False&#10;Scala99List Challenge: Flatten -&gt; Empty List of Empty List should =&gt; Empty List&#10;Scala99List Challenge: Flatten -&gt;  List of List with Empty List should =&gt; List&#10;Scala99List Challenge: dedup Func empty list of empty list should List of empty list&#10;Scala99List Challenge: dedup func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: rmDuplicates Func empty list of empty list should Empty list&#10;Scala99List Challenge: rmDuplicates func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'd, 'e)&#10;Scala99List Challenge: compress func Empty List should Return Empty List&#10;Scala99List Challenge: compress func List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should Return List('a, 'b, 'c, 'a, 'd, 'e)&#10;Scala99List Challenge: pack Func with Empty List should Return empty&#10;Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))&#10;Scala99List Challenge: encode Func with Empty List should return empty list&#10;Scala99List Challenge: encode Func with Char list should return encoded list with chars and int&#10;Scala99List Challenge: encodeModified Func: Empty should Returns Empty List&#10;Scala99List Challenge: encodeModifed Func: List[Chars] should Returns List[Any]" />
        <item itemvalue="ScalaTest.ListTest.Scala99List Challenge: encodeModifed Func: List[Chars] should Returns List[Any]" />
        <item itemvalue="ScalaTest.ListTest.Scala99List Challenge: encodeModified Func: Empty should Returns Empty List" />
        <item itemvalue="Application.Sl99" />
        <item itemvalue="ScalaTest.ListTest.Scala99List Challenge: encode Func with Char list should return encoded list with chars and int" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="Scala" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="scala [file:/C:/Users/Zero/IdeaProjects/Learning/Scala/]" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value="Scala-build" />
                <option name="path" value="$PROJECT_DIR$/project" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$/build.sbt" value="603386363" />
        <entry key="$PROJECT_DIR$/project/build.properties" value="1396028727" />
      </map>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="954a6d28-3e73-4efa-93e9-4a14bab4e00a" name="Default Changelist" comment="" />
      <created>1578865914319</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1578865914319</updated>
    </task>
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="ListTest_Scala99List_Challenge__pack_Func_with_List('a,_'a,_'a,_'a,_'b,_'c,_'c,_'a,_'a,_'d,_'e,_'e,_'e,_'e)_should_return_List(List('a,_'a,_'a,_'a),_List('b),_List('c,_'c),_List('a,_'a),_List('d),_List('e,_'e,_'e,_'e)) - 2020.01.23 at 22h 37m 30s.xml">
      <configuration name="ListTest.Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__pack_Func_with_List('a,_'a,_'a,_'a,_'b,_'c,_'c,_'a,_'a,_'d,_'e,_'e,_'e,_'e)_should_return_List(List('a,_'a,_'a,_'a),_List('b),_List('c,_'c),_List('a,_'a),_List('d),_List('e,_'e,_'e,_'e)) - 2020.01.23 at 22h 38m 12s.xml">
      <configuration name="ListTest.Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__pack_Func_with_List('a,_'a,_'a,_'a,_'b,_'c,_'c,_'a,_'a,_'d,_'e,_'e,_'e,_'e)_should_return_List(List('a,_'a,_'a,_'a),_List('b),_List('c,_'c),_List('a,_'a),_List('d),_List('e,_'e,_'e,_'e)) - 2020.01.23 at 22h 42m 04s.xml">
      <configuration name="ListTest.Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__pack_Func_with_List('a,_'a,_'a,_'a,_'b,_'c,_'c,_'a,_'a,_'d,_'e,_'e,_'e,_'e)_should_return_List(List('a,_'a,_'a,_'a),_List('b),_List('c,_'c),_List('a,_'a),_List('d),_List('e,_'e,_'e,_'e)) - 2020.01.23 at 22h 43m 10s.xml">
      <configuration name="ListTest.Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__pack_Func_with_List('a,_'a,_'a,_'a,_'b,_'c,_'c,_'a,_'a,_'d,_'e,_'e,_'e,_'e)_should_return_List(List('a,_'a,_'a,_'a),_List('b),_List('c,_'c),_List('a,_'a),_List('d),_List('e,_'e,_'e,_'e)) - 2020.01.23 at 22h 49m 37s.xml">
      <configuration name="ListTest.Scala99List Challenge: pack Func with List('a, 'a, 'a, 'a, 'b, 'c, 'c, 'a, 'a, 'd, 'e, 'e, 'e, 'e) should return List(List('a, 'a, 'a, 'a), List('b), List('c, 'c), List('a, 'a), List('d), List('e, 'e, 'e, 'e))" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__pack_Func_with_Empty_List_should_Return_empty - 2020.01.23 at 22h 51m 06s.xml">
      <configuration name="ListTest.Scala99List Challenge: pack Func with Empty List should Return empty" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__encode_Func_with_Empty_List_should_return_empty_list - 2020.01.25 at 17h 41m 29s.xml">
      <configuration name="ListTest.Scala99List Challenge: encode Func with Empty List should return empty list" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__encode_Func_with_Char_list_should_return_encoded_list_with_chars_and_int - 2020.01.25 at 17h 44m 51s.xml">
      <configuration name="ListTest.Scala99List Challenge: encode Func with Char list should return encoded list with chars and int" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__encode_Func_with_Char_list_should_return_encoded_list_with_chars_and_int - 2020.01.25 at 18h 58m 44s.xml">
      <configuration name="ListTest.Scala99List Challenge: encode Func with Char list should return encoded list with chars and int" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="ListTest_Scala99List_Challenge__encodeModified_Func__Empty_should_Returns_Empty_List - 2020.01.26 at 01h 01m 11s.xml">
      <configuration name="ListTest.Scala99List Challenge: encodeModified Func: Empty should Returns Empty List" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="960" height="1040" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.033333335" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="Capture Tool" order="4" />
      <window_info id="UI Designer" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info active="true" anchor="bottom" id="Run" order="2" visible="true" weight="0.3296582" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39911798" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Version Control" order="7" />
      <window_info anchor="bottom" id="sbt-shell-toolwindow" order="8" weight="0.3296582" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.3296582" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Build" order="11" weight="0.3296582" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Maven" order="4" />
      <window_info anchor="right" id="Gradle" order="5" />
      <window_info anchor="right" id="Theme Preview" order="6" />
      <window_info anchor="right" id="Capture Analysis" order="7" />
      <window_info anchor="right" id="Palette&#9;" order="8" />
      <window_info anchor="right" id="sbt" order="9" />
    </layout>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/FutureThreads/FutureReturns.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="365">
          <caret line="29" column="3" lean-forward="true" selection-start-line="29" selection-start-column="3" selection-end-line="29" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/TestProject/TDD/InvestmentTest.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="289">
          <caret line="17" column="67" lean-forward="true" selection-start-line="17" selection-start-column="1" selection-end-line="17" selection-end-column="67" />
          <folding>
            <element signature="e#29#70#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/concurrent/package.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="416">
          <caret line="197" column="14" selection-start-line="197" selection-start-column="14" selection-end-line="197" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/ListTest.scala" />
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/StrictOptimizedIterableOps.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="322">
          <caret line="156" column="15" selection-start-line="156" selection-start-column="15" selection-end-line="156" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/immutable/List.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="313">
          <caret line="271" column="17" lean-forward="true" selection-start-line="271" selection-start-column="17" selection-end-line="271" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/IterableOnce.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="135" column="6" selection-start-line="135" selection-start-column="6" selection-end-line="135" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/NestedList.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="203">
          <caret line="22" lean-forward="true" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/review/CollectionRev/ArrayRev.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1139">
          <caret line="97" column="16" lean-forward="true" selection-start-line="97" selection-start-column="16" selection-end-line="97" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/review/CollectionRev/MapReview.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-102">
          <caret line="3" column="7" selection-start-line="3" selection-start-column="7" selection-end-line="3" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/FutureThreads/FutureFlatMap.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="391">
          <caret line="23" selection-start-line="23" selection-end-line="23" />
          <folding>
            <element signature="e#33#61#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/Seq.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="186">
          <caret line="222" column="45" selection-start-line="222" selection-start-column="45" selection-end-line="222" selection-end-column="45" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/Iterable.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="398">
          <caret line="173" column="16" selection-start-line="173" selection-start-column="16" selection-end-line="173" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/Scala99Problems">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="442">
          <caret line="65" column="59" selection-start-line="65" selection-start-column="59" selection-end-line="65" selection-end-column="59" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99ListChallenge.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="424">
          <caret line="330" lean-forward="true" selection-start-line="297" selection-start-column="1" selection-end-line="330" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Sl99.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="136">
          <caret line="8" column="55" selection-start-line="8" selection-start-column="55" selection-end-line="8" selection-end-column="55" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/ListTest.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="376">
          <caret line="647" column="40" selection-start-line="647" selection-start-column="40" selection-end-line="647" selection-end-column="40" />
          <folding>
            <element signature="e#34#75#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>