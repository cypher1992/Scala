<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BookmarkManager">
    <bookmark url="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/ListTest.scala" line="227" mnemonic="9" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="954a6d28-3e73-4efa-93e9-4a14bab4e00a" name="Default Changelist" comment="" />
    <ignored path="$PROJECT_DIR$/out/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <ignored path="$PROJECT_DIR$/project/project/target/" />
    <ignored path="$PROJECT_DIR$/project/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageViewManager">
    <option name="myElementSize" value="115" />
  </component>
  <component name="DefaultGradleProjectSettings">
    <option name="isMigrated" value="true" />
  </component>
  <component name="DockManager">
    <window id="1">
      <content type="file-editors">
        <state>
          <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
            <file pinned="false" current-in-tab="true">
              <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/Scala99Problems">
                <provider selected="true" editor-type-id="text-editor">
                  <state relative-caret-position="544">
                    <caret line="285" column="25" selection-start-line="285" selection-start-column="25" selection-end-line="285" selection-end-column="25" />
                  </state>
                </provider>
              </entry>
            </file>
          </leaf>
        </state>
      </content>
    </window>
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99Logica1.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="204">
              <caret line="93" column="10" selection-start-line="93" selection-start-column="6" selection-end-line="93" selection-end-column="10" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Bound.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="394">
              <caret line="25" column="55" lean-forward="true" selection-start-line="25" selection-start-column="55" selection-end-line="25" selection-end-column="55" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/Logica1.scala">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="227">
              <caret line="177" column="55" selection-start-line="177" selection-start-column="55" selection-end-line="177" selection-end-column="55" />
              <folding>
                <element signature="e#34#75#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>exists</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="ROOT_SYNC" value="SYNC" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/src" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/main/scala/com/local/FutureThreads/FutureFlatMap.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/ListTest.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/NestedList.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Sl99.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Interest/Investments.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Client.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/Resource/NotesOnTesting" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99Arithmetic.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/Scala99Problems" />
        <option value="$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/Arithmetic.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Logica1.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/basics/IterationBasic.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/ListTest.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99ListChallenge.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/review/CollectionFunction/FlatMapReview.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/AllAboutScalaExcerciseTDD/AllAboutScalaExcerciseTDD.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/AllAboutScalaProblems/Basics.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/AllAboutScalaExcerciseTDD/AllAboutScalaExerciseTDD.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/projects/financial/AlphaVantageClient.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Bound.scala" />
        <option value="$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99Logica1.scala" />
        <option value="$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/Logica1.scala" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="width" value="960" />
    <option name="height" value="1040" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="financial" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="local" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="local" type="462c0819:PsiDirectoryNode" />
              <item name="Resource" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="local" type="462c0819:PsiDirectoryNode" />
              <item name="Resource" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="review" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="Resources" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="Scala" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="scala" type="462c0819:PsiDirectoryNode" />
              <item name="com" type="462c0819:PsiDirectoryNode" />
              <item name="ListTest" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Scala" type="b2602c69:ProjectViewProjectNode" />
              <item name="External Libraries" type="cb654da1:ExternalLibrariesNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="settings.github" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="ScalaTest.Logica1.Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(2) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)">
    <configuration name="Logica1.Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(-1) should return List(0,1)&#10;Scala99Logical Challenge: grey(0) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="testName" value="Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(-1) should return List(0,1)&#10;Scala99Logical Challenge: grey(0) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Logica1.Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(0) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="testName" value="Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(0) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Logica1.Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(2) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="testName" value="Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(2) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Logica1.Scala99Logical Challenge: grey(-1) should return List(0,1)" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="testName" value="Scala99Logical Challenge: grey(-1) should return List(0,1)" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Logica1.Scala99Logical Challenge: grey(2) should return List(0,1)" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true">
      <module name="Scala" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workingDirectory" value="file://$PROJECT_DIR$" />
      <setting name="searchForTest" value="Across module dependencies" />
      <setting name="showProgressMessages" value="true" />
      <setting name="useSbt" value="false" />
      <setting name="useUiWithSbt" value="false" />
      <setting name="jrePath" value="" />
      <envs />
      <setting name="testKind" value="Test name" />
      <setting name="path" value="com.Scala99Test.ListTest.Logica1" />
      <setting name="testName" value="Scala99Logical Challenge: grey(2) should return List(0,1)" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="ScalaTest.Logica1.Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(2) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" />
        <item itemvalue="ScalaTest.Logica1.Scala99Logical Challenge: grey(2) should return List(0,1)" />
        <item itemvalue="ScalaTest.Logica1.Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(0) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" />
        <item itemvalue="ScalaTest.Logica1.Logical: equalityTestFunc(true,true) should reture true&#10;Scala99Logical Challenge: and(false,true) should return false&#10;Scala99Logical Challenge: and(true,true) should return true&#10;Scala99Logical Challenge: or(false,true) should return true&#10;Scala99Logical Challenge: or(false,false) should return false&#10;Scala99Logical Challenge: or(true,false) should return true&#10;Scala99Logical Challenge: nand(true,false) should return true&#10;Scala99Logical Challenge: nand(true,true) should return false&#10;Scala99Logical Challenge: equ(true,true) should return true&#10;Scala99Logical Challenge: equ(false,false) should return true&#10;Scala99Logical Challenge: xor(true,true) should return false&#10;Scala99Logical Challenge: xor(false,true) should return false&#10;Scala99Logical Challenge: xor(false,false) should return false&#10;Scala99Logical Challenge: impl(true,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return true&#10;Scala99Logical Challenge: impl(false,true) should return false&#10;Scala99Logical Challenge: impl(false,false) should return true&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; sl99.and(a, sl99.or(a, b))) should return table&#10;Scala99Logical Challenge: table2((a: Boolean, b: Boolean) =&gt; a and (a or not(b))) should return table&#10;Scala99Logical Challenge: grey(-1) should return List(0,1)&#10;Scala99Logical Challenge: grey(0) should return List(0,1)&#10;Scala99Logical Challenge: grey(1) should return List(0,1)" />
        <item itemvalue="ScalaTest.Logica1.Scala99Logical Challenge: grey(-1) should return List(0,1)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SbtLocalSettings">
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="Scala" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="scala [file:/C:/Users/Zero/IdeaProjects/Learning/Scala/]" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
              <ExternalProjectPojo>
                <option name="name" value="Scala-build" />
                <option name="path" value="$PROJECT_DIR$/project" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="modificationStamps">
      <map>
        <entry key="$PROJECT_DIR$/build.sbt" value="603386363" />
        <entry key="$PROJECT_DIR$/project/build.properties" value="1396028727" />
      </map>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="954a6d28-3e73-4efa-93e9-4a14bab4e00a" name="Default Changelist" comment="" />
      <created>1578865914319</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1578865914319</updated>
    </task>
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq_empty[Int])_should_throw_NoSuchElement - 2020.02.18 at 22h 33m 23s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq.empty[Int]) should throw NoSuchElement" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq(1253,25))_should_Map(_Min_-_25,_Max__-_1253_) - 2020.02.18 at 22h 33m 47s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq(1253,25)) should Map(&quot;Min&quot;-&gt;25,&quot;Max&quot; -&gt;1253 )" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq(1253,25,-45))_should_Map(_Min_-__-45,_Max__-_1253_) - 2020.02.18 at 22h 39m 52s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq(1253,25,-45)) should Map(&quot;Min&quot;-&gt; -45,&quot;Max&quot; -&gt;1253 )" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq_empty[Int])_should_throw_NoSuchElement - 2020.02.18 at 22h 51m 36s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq.empty[Int]) should throw NoSuchElement" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq(1253))_should_Map(_Min_-_1253,_Max__-_1253_) - 2020.02.18 at 22h 51m 59s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq(1253)) should Map(&quot;Min&quot;-&gt;1253,&quot;Max&quot; -&gt;1253 )" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq(1253,25))_should_Map(_Min_-_25,_Max__-_1253_) - 2020.02.18 at 22h 52m 07s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq(1253,25)) should Map(&quot;Min&quot;-&gt;25,&quot;Max&quot; -&gt;1253 )" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq(1253,25,-45))_should_Map(_Min_-__-45,_Max__-_1253_) - 2020.02.18 at 22h 52m 14s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq(1253,25,-45)) should Map(&quot;Min&quot;-&gt; -45,&quot;Max&quot; -&gt;1253 )" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="AllAboutScalaExerciseTDD_AASE_Challenge__minMax(Seq(25,1253))_should_Map(_Min_-_25,_Max__-_1253_) - 2020.02.18 at 22h 54m 36s.xml">
      <configuration name="AllAboutScalaExerciseTDD.AASE Challenge: minMax(Seq(25,1253)) should Map(&quot;Min&quot;-&gt;25,&quot;Max&quot; -&gt;1253 )" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="Logica1_Scala99Logical_Challenge__grey(0)_should_return_List(0,1) - 2020.02.19 at 21h 17m 06s.xml">
      <configuration name="Logica1.Scala99Logical Challenge: grey(0) should return List(0,1)" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
    <history-entry file="Logica1_Scala99Logical_Challenge__grey(2)_should_return_List(0,1) - 2020.02.20 at 19h 42m 42s.xml">
      <configuration name="Logica1.Scala99Logical Challenge: grey(2) should return List(0,1)" configurationId="ScalaTestRunConfiguration" />
    </history-entry>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="960" height="1040" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" weight="0.38555557" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="Capture Tool" order="4" />
      <window_info id="UI Designer" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info active="true" anchor="bottom" id="Run" order="2" sideWeight="0.49666667" visible="true" weight="0.32524806" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39911798" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Version Control" order="7" weight="0.3351709" />
      <window_info anchor="bottom" id="sbt-shell-toolwindow" order="8" sideWeight="0.85888886" weight="0.32855567" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.3296582" />
      <window_info anchor="bottom" id="Event Log" order="10" sideWeight="0.50333333" side_tool="true" weight="0.32524806" />
      <window_info anchor="bottom" id="Build" order="11" weight="0.3296582" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Maven" order="4" />
      <window_info anchor="right" id="Gradle" order="5" />
      <window_info anchor="right" id="Theme Preview" order="6" />
      <window_info anchor="right" id="Capture Analysis" order="7" />
      <window_info anchor="right" id="Palette&#9;" order="8" />
      <window_info anchor="right" id="sbt" order="9" />
      <window_info anchor="right" id="Coverage" order="10" side_tool="true" weight="0.26222223" />
    </layout>
    <layout-to-restore>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.27333334" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="Capture Tool" order="4" />
      <window_info id="UI Designer" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info active="true" anchor="bottom" id="Run" order="2" sideWeight="0.49840087" visible="true" weight="0.32524806" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39911798" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Version Control" order="7" weight="0.3351709" />
      <window_info anchor="bottom" id="sbt-shell-toolwindow" order="8" sideWeight="0.8611111" weight="0.32855567" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.3296582" />
      <window_info anchor="bottom" id="Event Log" order="10" sideWeight="0.50159913" side_tool="true" weight="0.3261105" />
      <window_info anchor="bottom" id="Build" order="11" weight="0.3296582" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Maven" order="4" />
      <window_info anchor="right" id="Gradle" order="5" />
      <window_info anchor="right" id="Theme Preview" order="6" />
      <window_info anchor="right" id="Capture Analysis" order="7" />
      <window_info anchor="right" id="Palette&#9;" order="8" />
      <window_info anchor="right" id="sbt" order="9" />
      <window_info anchor="right" id="Coverage" order="10" side_tool="true" weight="0.26222223" />
    </layout-to-restore>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Scala$ScalaTests_in__scala_.ic" NAME="ScalaTests in 'scala' Coverage Results" MODIFIED="1580344013549" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/Scala$ScalaTests_in__ListTest_.ic" NAME="ScalaTests in 'ListTest' Coverage Results" MODIFIED="1580075758775" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/FutureThreads/FutureReturns.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="365">
          <caret line="29" column="3" lean-forward="true" selection-start-line="29" selection-start-column="3" selection-end-line="29" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/TestProject/TDD/InvestmentTest.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="289">
          <caret line="17" column="67" lean-forward="true" selection-start-line="17" selection-start-column="1" selection-end-line="17" selection-end-column="67" />
          <folding>
            <element signature="e#29#70#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/concurrent/package.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="416">
          <caret line="197" column="14" selection-start-line="197" selection-start-column="14" selection-end-line="197" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/ListTest.scala" />
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/StrictOptimizedIterableOps.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="322">
          <caret line="156" column="15" selection-start-line="156" selection-start-column="15" selection-end-line="156" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/immutable/List.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="313">
          <caret line="271" column="17" lean-forward="true" selection-start-line="271" selection-start-column="17" selection-end-line="271" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/IterableOnce.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="194">
          <caret line="135" column="6" selection-start-line="135" selection-start-column="6" selection-end-line="135" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/NestedList.scala" />
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/review/CollectionRev/ArrayRev.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1139">
          <caret line="97" column="16" lean-forward="true" selection-start-line="97" selection-start-column="16" selection-end-line="97" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/review/CollectionRev/MapReview.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-102">
          <caret line="3" column="7" selection-start-line="3" selection-start-column="7" selection-end-line="3" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/FutureThreads/FutureFlatMap.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="391">
          <caret line="23" selection-start-line="23" selection-end-line="23" />
          <folding>
            <element signature="e#33#61#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/Iterable.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="398">
          <caret line="173" column="16" selection-start-line="173" selection-start-column="16" selection-end-line="173" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Sl99.scala" />
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Interest/Investments.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="393">
          <caret line="37" column="56" selection-start-line="37" selection-start-column="56" selection-end-line="37" selection-end-column="56" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Client.scala" />
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/util/Random.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="17">
          <caret line="95" column="6" selection-start-line="95" selection-start-column="6" selection-end-line="95" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/Resource/NotesOnTesting">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="204">
          <caret line="12" selection-start-line="12" selection-end-line="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99Arithmetic.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="278">
          <caret line="265" selection-start-line="265" selection-end-line="265" />
          <folding>
            <element signature="e#40#61#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/basics/ForComprehension.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-272">
          <caret line="2" column="7" selection-start-line="2" selection-start-column="7" selection-end-line="2" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/Arithmetic.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="17">
          <caret line="22" column="23" lean-forward="true" selection-start-line="22" selection-start-column="23" selection-end-line="22" selection-end-column="23" />
          <folding>
            <element signature="e#34#75#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://C:/Program Files/Java/jdk1.8.0_211/src.zip!/java/util/NoSuchElementException.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="357">
          <caret line="44" column="11" selection-start-line="44" selection-start-column="11" selection-end-line="44" selection-end-column="11" />
          <folding>
            <element signature="e#776#777#0" expanded="true" />
            <element signature="e#799#800#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://$USER_HOME$/.ivy2/cache/org.scala-lang/scala-library/srcs/scala-library-2.13.0-sources.jar!/scala/collection/Seq.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="150">
          <caret line="538" column="6" selection-start-line="538" selection-start-column="6" selection-end-line="538" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/basics/IterationBasic.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="411">
          <caret line="30" column="15" lean-forward="true" selection-start-line="30" selection-start-column="15" selection-end-line="30" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/review/CollectionFunction/FlatMapReview.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="238">
          <caret line="14" column="21" lean-forward="true" selection-start-line="14" selection-start-column="21" selection-end-line="14" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99ListChallenge.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="360">
          <caret line="810" column="3" lean-forward="true" selection-start-line="810" selection-start-column="3" selection-end-line="810" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/ListTest.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="85">
          <caret line="5" selection-start-line="5" selection-end-line="5" selection-end-column="39" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/AllAboutScalaProblems/Basics.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="459">
          <caret line="39" column="74" selection-start-line="39" selection-start-column="74" selection-end-line="39" selection-end-column="74" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/AllAboutScalaExcerciseTDD/AllAboutScalaExerciseTDD.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1071">
          <caret line="81" lean-forward="true" selection-start-line="81" selection-end-line="81" />
          <folding>
            <element signature="e#38#79#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/projects/financial/DataSeries/AlphaVanTimeSeries.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret line="2" column="6" selection-start-line="2" selection-start-column="6" selection-end-line="2" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/projects/financial/AlphaVantageClient.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="119">
          <caret line="9" column="17" selection-start-line="9" selection-start-column="17" selection-end-line="9" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/Scala99Problems">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="544">
          <caret line="285" column="25" selection-start-line="285" selection-start-column="25" selection-end-line="285" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Bound.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="394">
          <caret line="25" column="55" lean-forward="true" selection-start-line="25" selection-start-column="55" selection-end-line="25" selection-end-column="55" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/scala/com/local/Projects/Resource/src/Scala99Logica1.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="204">
          <caret line="93" column="10" selection-start-line="93" selection-start-column="6" selection-end-line="93" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/scala/com/Scala99Test/ListTest/Logica1.scala">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="227">
          <caret line="177" column="55" selection-start-line="177" selection-start-column="55" selection-end-line="177" selection-end-column="55" />
          <folding>
            <element signature="e#34#75#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
</project>